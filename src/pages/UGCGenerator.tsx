import { useState } from "react";
import { Video, Upload, Sparkles, Music, TrendingUp } from "lucide-react";
import { WizardStep } from "@/components/WizardStep";
import { Button } from "@/components/ui/button";
import { Card } from "@/components/ui/card";
import { Textarea } from "@/components/ui/textarea";
import { AIChat } from "@/components/AIChat";

const platforms = [
  { id: "reels", name: "Stories/Reels", ratio: "9:16", icon: "üì±" },
  { id: "feed", name: "–õ–µ–Ω—Ç–∞", ratio: "1:1", icon: "‚¨ú" },
  { id: "shorts", name: "YouTube Shorts", ratio: "9:16", icon: "‚ñ∂Ô∏è" },
];

const styles = [
  { id: "cyberpunk", name: "–ö–∏–±–µ—Ä–ø–∞–Ω–∫", emoji: "üåÜ" },
  { id: "vintage", name: "–¢–µ–ø–ª—ã–π –≤–∏–Ω—Ç–∞–∂", emoji: "üì∑" },
  { id: "90s", name: "–≠—Å—Ç–µ—Ç–∏–∫–∞ 90-—Ö", emoji: "üíø" },
  { id: "minimal", name: "–ú–∏–Ω–∏–º–∞–ª–∏–∑–º", emoji: "‚ö™" },
];

const UGCGenerator = () => {
  const [step, setStep] = useState(1);
  const [selectedPlatform, setSelectedPlatform] = useState("");
  const [selectedStyle, setSelectedStyle] = useState("");
  const [prompt, setPrompt] = useState("");
  const [showChat, setShowChat] = useState(false);

  return (
    <div className="min-h-screen bg-background pb-20">
      {!showChat ? (
        <WizardStep
          currentStep={step}
          totalSteps={4}
          title={
            step === 1
              ? "–ò–¥–µ—è –∏ —Ä–µ—Ñ–µ—Ä–µ–Ω—Å"
              : step === 2
              ? "–§–æ—Ä–º–∞—Ç –∏ –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞"
              : step === 3
              ? "–°—Ç–∏–ª—å –∏ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ"
              : "–°–æ–∑–¥–∞–Ω–∏–µ –∫–æ–Ω—Ç–µ–Ω—Ç–∞"
          }
          description={
            step === 1
              ? "–ó–∞–≥—Ä—É–∑–∏—Ç–µ —Ñ–æ—Ç–æ –∏–ª–∏ –≤–∏–¥–µ–æ, –∫–æ—Ç–æ—Ä–æ–µ –≤–¥–æ—Ö–Ω–æ–≤–ª—è–µ—Ç –≤–∞—Å"
              : step === 2
              ? "–í—ã–±–µ—Ä–∏—Ç–µ —Ñ–æ—Ä–º–∞—Ç –¥–ª—è –≤–∞—à–µ–π —Å–æ—Ü—Å–µ—Ç–∏"
              : step === 3
              ? "–û–ø–∏—à–∏—Ç–µ –∂–µ–ª–∞–µ–º—ã–π —Å—Ç–∏–ª—å –≤–∞—à–µ–≥–æ —Ä–æ–ª–∏–∫–∞"
              : "–ü–æ–¥–æ–∂–¥–∏—Ç–µ, —Å–æ–∑–¥–∞–µ–º –≤–∞—à UGC-—Ä–æ–ª–∏–∫..."
          }
          onNext={() => (step < 4 ? setStep(step + 1) : setShowChat(true))}
          onPrev={() => setStep(step - 1)}
          canGoNext={
            step === 1 ? true : step === 2 ? !!selectedPlatform : step === 3 ? !!selectedStyle || !!prompt : false
          }
          isLastStep={step === 4}
          modeColor="ugc"
        >
          {step === 1 && (
            <div className="space-y-4">
              <Card className="border-2 border-dashed border-[hsl(var(--mode-ugc))] bg-[hsl(var(--mode-ugc-soft))] p-12 text-center cursor-pointer hover:bg-[hsl(var(--mode-ugc-soft))]/80 transition-colors">
                <Upload className="w-12 h-12 mx-auto mb-4 text-[hsl(var(--mode-ugc))]" />
                <p className="text-lg font-semibold mb-2">–ó–∞–≥—Ä—É–∑–∏—Ç–µ –º–µ–¥–∏–∞</p>
                <p className="text-sm text-muted-foreground">
                  –ü–µ—Ä–µ—Ç–∞—â–∏—Ç–µ —Ñ–∞–π–ª –∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ –¥–ª—è –≤—ã–±–æ—Ä–∞
                </p>
              </Card>

              <div className="text-center">
                <p className="text-sm text-muted-foreground mb-3">–∏–ª–∏</p>
                <Button variant="outline" className="gap-2">
                  <TrendingUp className="w-4 h-4" />
                  –í—ã–±—Ä–∞—Ç—å –∏–∑ —Ç—Ä–µ–Ω–¥–æ–≤
                </Button>
              </div>
            </div>
          )}

          {step === 2 && (
            <div className="grid gap-3">
              {platforms.map((platform) => (
                <Card
                  key={platform.id}
                  onClick={() => setSelectedPlatform(platform.id)}
                  className={`p-4 cursor-pointer transition-all ${
                    selectedPlatform === platform.id
                      ? "border-2 border-[hsl(var(--mode-ugc))] bg-[hsl(var(--mode-ugc-soft))]"
                      : "hover:border-[hsl(var(--mode-ugc))]"
                  }`}
                >
                  <div className="flex items-center gap-3">
                    <span className="text-3xl">{platform.icon}</span>
                    <div className="flex-1">
                      <h4 className="font-semibold">{platform.name}</h4>
                      <p className="text-sm text-muted-foreground">
                        –°–æ–æ—Ç–Ω–æ—à–µ–Ω–∏–µ {platform.ratio}
                      </p>
                    </div>
                  </div>
                </Card>
              ))}
            </div>
          )}

          {step === 3 && (
            <div className="space-y-6">
              <div>
                <label className="block text-sm font-medium mb-3">
                  –û–ø–∏—à–∏—Ç–µ —Å—Ç–∏–ª—å —Ç–µ–∫—Å—Ç–æ–º
                </label>
                <Textarea
                  placeholder="–ù–∞–ø—Ä–∏–º–µ—Ä: –∫–∏–±–µ—Ä–ø–∞–Ω–∫, –Ω–µ–æ–Ω–æ–≤—ã–µ –æ–≥–Ω–∏, –¥–∏–Ω–∞–º–∏—á–Ω—ã–π –º–æ–Ω—Ç–∞–∂..."
                  value={prompt}
                  onChange={(e) => setPrompt(e.target.value)}
                  rows={4}
                  className="resize-none"
                />
              </div>

              <div className="relative">
                <div className="absolute inset-0 flex items-center">
                  <span className="w-full border-t" />
                </div>
                <div className="relative flex justify-center text-xs uppercase">
                  <span className="bg-background px-2 text-muted-foreground">
                    –∏–ª–∏ –≤—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–µ—Å–µ—Ç
                  </span>
                </div>
              </div>

              <div className="grid grid-cols-2 gap-3">
                {styles.map((style) => (
                  <Card
                    key={style.id}
                    onClick={() => {
                      setSelectedStyle(style.id);
                      setPrompt("");
                    }}
                    className={`p-4 cursor-pointer text-center transition-all ${
                      selectedStyle === style.id
                        ? "border-2 border-[hsl(var(--mode-ugc))] bg-[hsl(var(--mode-ugc-soft))]"
                        : "hover:border-[hsl(var(--mode-ugc))]"
                    }`}
                  >
                    <span className="text-3xl block mb-2">{style.emoji}</span>
                    <p className="font-medium text-sm">{style.name}</p>
                  </Card>
                ))}
              </div>

              <Card className="p-4 bg-[hsl(var(--mode-ugc-soft))] border-[hsl(var(--mode-ugc))]">
                <div className="flex gap-3">
                  <Sparkles className="w-5 h-5 text-[hsl(var(--mode-ugc))] flex-shrink-0 mt-0.5" />
                  <div className="text-sm">
                    <p className="font-medium mb-1">AI-–ø–æ–¥—Å–∫–∞–∑–∫–∞</p>
                    <p className="text-muted-foreground">
                      –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –æ–ø–∏—Å–∞—Ç—å –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ: —ç–Ω–µ—Ä–≥–∏—á–Ω—ã–π, —Å–ø–æ–∫–æ–π–Ω—ã–π,
                      –∫—Ä–µ–∞—Ç–∏–≤–Ω—ã–π...
                    </p>
                  </div>
                </div>
              </Card>
            </div>
          )}

          {step === 4 && (
            <div className="text-center py-12">
              <div className="w-16 h-16 mx-auto mb-4 rounded-full bg-[hsl(var(--mode-ugc-soft))] flex items-center justify-center animate-pulse">
                <Music className="w-8 h-8 text-[hsl(var(--mode-ugc))]" />
              </div>
              <h3 className="text-xl font-semibold mb-2">–°–æ–∑–¥–∞–µ–º –≤–∞—à —Ä–æ–ª–∏–∫</h3>
              <p className="text-muted-foreground mb-1">–ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º —Ç—Ä–µ–Ω–¥—ã...</p>
              <p className="text-muted-foreground">–ü–æ–¥–±–∏—Ä–∞–µ–º –º—É–∑—ã–∫—É...</p>
            </div>
          )}
        </WizardStep>
      ) : (
        <div className="container mx-auto px-4 py-6 pb-24">
          <div className="flex items-center gap-3 mb-6">
            <div
              className="p-3 rounded-xl"
              style={{
                background: "var(--gradient-ugc)",
              }}
            >
              <Video className="w-6 h-6 text-white" />
            </div>
            <div>
              <h1 className="text-2xl font-bold">–†–µ–∑—É–ª—å—Ç–∞—Ç –≥–æ—Ç–æ–≤!</h1>
              <p className="text-sm text-muted-foreground">
                –†–µ–¥–∞–∫—Ç–∏—Ä—É–π—Ç–µ —á–µ—Ä–µ–∑ AI-—á–∞—Ç
              </p>
            </div>
          </div>

          <div className="grid md:grid-cols-2 gap-6">
            <div>
              <div className="aspect-[9/16] bg-muted rounded-2xl mb-4 flex items-center justify-center">
                <p className="text-muted-foreground">–ü—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä –≤–∏–¥–µ–æ</p>
              </div>
              <div className="flex gap-2">
                <Button className="flex-1">–°–∫–∞—á–∞—Ç—å</Button>
                <Button variant="outline" className="flex-1">
                  –ü–æ–¥–µ–ª–∏—Ç—å—Å—è
                </Button>
              </div>
            </div>

            <div className="h-[600px]">
              <AIChat
                modeColor="ugc"
                placeholder="–ù–∞–ø—Ä–∏–º–µ—Ä: —Å–¥–µ–ª–∞–π –Ω–µ–±–æ –±–æ–ª–µ–µ —è—Ä–∫–∏–º..."
                initialMessages={[
                  {
                    id: "1",
                    role: "assistant",
                    content:
                      "–û—Ç–ª–∏—á–Ω–æ! –í–∞—à UGC-—Ä–æ–ª–∏–∫ –≥–æ—Ç–æ–≤. –•–æ—Ç–∏—Ç–µ —á—Ç–æ-—Ç–æ –∏–∑–º–µ–Ω–∏—Ç—å?",
                  },
                ]}
              />
            </div>
          </div>
        </div>
      )}
    </div>
  );
};

export default UGCGenerator;
